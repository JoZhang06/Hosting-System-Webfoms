//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Proyecto_Progra_Sistema_Hospedaje.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HostingEntities : DbContext
    {
        public HostingEntities()
            : base("name=HostingEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Bitacora> Bitacora { get; set; }
        public virtual DbSet<Habitacion> Habitacion { get; set; }
        public virtual DbSet<Hotel> Hotel { get; set; }
        public virtual DbSet<Persona> Persona { get; set; }
        public virtual DbSet<Reservacion> Reservacion { get; set; }
    
        public virtual ObjectResult<ConsultarDatosParaCancelar_Result> ConsultarDatosParaCancelar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarDatosParaCancelar_Result>("ConsultarDatosParaCancelar");
        }
    
        public virtual ObjectResult<Nullable<int>> ConsultarHabitacionMenor(Nullable<int> idHabitacion)
        {
            var idHabitacionParameter = idHabitacion.HasValue ?
                new ObjectParameter("idHabitacion", idHabitacion) :
                new ObjectParameter("idHabitacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ConsultarHabitacionMenor", idHabitacionParameter);
        }
    
        public virtual ObjectResult<ConsultarHabitacionPorHotel_Result> ConsultarHabitacionPorHotel(Nullable<int> idHotel)
        {
            var idHotelParameter = idHotel.HasValue ?
                new ObjectParameter("idHotel", idHotel) :
                new ObjectParameter("idHotel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarHabitacionPorHotel_Result>("ConsultarHabitacionPorHotel", idHotelParameter);
        }
    
        public virtual ObjectResult<ConsultarHabitacionPorID_Result> ConsultarHabitacionPorID(Nullable<int> idHabitacion)
        {
            var idHabitacionParameter = idHabitacion.HasValue ?
                new ObjectParameter("idHabitacion", idHabitacion) :
                new ObjectParameter("idHabitacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarHabitacionPorID_Result>("ConsultarHabitacionPorID", idHabitacionParameter);
        }
    
        public virtual ObjectResult<sp_ConsultarHotelPorID_Result> sp_ConsultarHotelPorID(Nullable<int> idHotel)
        {
            var idHotelParameter = idHotel.HasValue ?
                new ObjectParameter("idHotel", idHotel) :
                new ObjectParameter("idHotel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConsultarHotelPorID_Result>("sp_ConsultarHotelPorID", idHotelParameter);
        }
    
        public virtual int spCancelarReservacion(Nullable<int> idReservacion, Nullable<int> idHabitacion, Nullable<int> idPersona, Nullable<System.DateTime> fechaModificacion)
        {
            var idReservacionParameter = idReservacion.HasValue ?
                new ObjectParameter("idReservacion", idReservacion) :
                new ObjectParameter("idReservacion", typeof(int));
    
            var idHabitacionParameter = idHabitacion.HasValue ?
                new ObjectParameter("idHabitacion", idHabitacion) :
                new ObjectParameter("idHabitacion", typeof(int));
    
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("idPersona", idPersona) :
                new ObjectParameter("idPersona", typeof(int));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("fechaModificacion", fechaModificacion) :
                new ObjectParameter("fechaModificacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCancelarReservacion", idReservacionParameter, idHabitacionParameter, idPersonaParameter, fechaModificacionParameter);
        }
    
        public virtual ObjectResult<spConsultaCreacionHabitaciones_Result> spConsultaCreacionHabitaciones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultaCreacionHabitaciones_Result>("spConsultaCreacionHabitaciones");
        }
    
        public virtual ObjectResult<spConsultadeHabitacion_Result> spConsultadeHabitacion(Nullable<int> idHotel, Nullable<int> cantidadPersonas)
        {
            var idHotelParameter = idHotel.HasValue ?
                new ObjectParameter("idHotel", idHotel) :
                new ObjectParameter("idHotel", typeof(int));
    
            var cantidadPersonasParameter = cantidadPersonas.HasValue ?
                new ObjectParameter("cantidadPersonas", cantidadPersonas) :
                new ObjectParameter("cantidadPersonas", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultadeHabitacion_Result>("spConsultadeHabitacion", idHotelParameter, cantidadPersonasParameter);
        }
    
        public virtual ObjectResult<spConsultaHabitaciones_Result> spConsultaHabitaciones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultaHabitaciones_Result>("spConsultaHabitaciones");
        }
    
        public virtual ObjectResult<spConsultaMisReservaciones_Result> spConsultaMisReservaciones(Nullable<int> idPersona)
        {
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("idPersona", idPersona) :
                new ObjectParameter("idPersona", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultaMisReservaciones_Result>("spConsultaMisReservaciones", idPersonaParameter);
        }
    
        public virtual ObjectResult<spConsultarBitacora_Result> spConsultarBitacora(Nullable<int> idReservacion)
        {
            var idReservacionParameter = idReservacion.HasValue ?
                new ObjectParameter("IdReservacion", idReservacion) :
                new ObjectParameter("IdReservacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultarBitacora_Result>("spConsultarBitacora", idReservacionParameter);
        }
    
        public virtual ObjectResult<spConsultarClientePorId_Result> spConsultarClientePorId(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultarClientePorId_Result>("spConsultarClientePorId", iDParameter);
        }
    
        public virtual ObjectResult<spConsultaReservacionPorCliente_Result> spConsultaReservacionPorCliente()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultaReservacionPorCliente_Result>("spConsultaReservacionPorCliente");
        }
    
        public virtual ObjectResult<spConsultarHabitacionPorId_Result> spConsultarHabitacionPorId(Nullable<int> idHabitacion)
        {
            var idHabitacionParameter = idHabitacion.HasValue ?
                new ObjectParameter("idHabitacion", idHabitacion) :
                new ObjectParameter("idHabitacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultarHabitacionPorId_Result>("spConsultarHabitacionPorId", idHabitacionParameter);
        }
    
        public virtual ObjectResult<spConsultarHotel_Result> spConsultarHotel()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultarHotel_Result>("spConsultarHotel");
        }
    
        public virtual ObjectResult<spConsultarReservacionPorId_Result> spConsultarReservacionPorId(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultarReservacionPorId_Result>("spConsultarReservacionPorId", iDParameter);
        }
    
        public virtual ObjectResult<spConsultarTodasLasReservacionesParaDatos_Result> spConsultarTodasLasReservacionesParaDatos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultarTodasLasReservacionesParaDatos_Result>("spConsultarTodasLasReservacionesParaDatos");
        }
    
        public virtual ObjectResult<spConsultarTodosClientes_Result> spConsultarTodosClientes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultarTodosClientes_Result>("spConsultarTodosClientes");
        }
    
        public virtual ObjectResult<spConsultarTodosHoteles_Result> spConsultarTodosHoteles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultarTodosHoteles_Result>("spConsultarTodosHoteles");
        }
    
        public virtual int spcreacionreservacion(Nullable<int> idPersona, Nullable<int> idHabitacion, Nullable<int> diasReservados, Nullable<System.DateTime> fechaEntrada, Nullable<System.DateTime> fechaSalida, Nullable<decimal> costoPorAdulto, Nullable<decimal> costoPorNinho, Nullable<int> numeroAdultos, Nullable<int> numeroNinhos, Nullable<decimal> costoTotal, Nullable<System.DateTime> fechaCreacion, Nullable<System.DateTime> fechaModificacion, string estado)
        {
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("idPersona", idPersona) :
                new ObjectParameter("idPersona", typeof(int));
    
            var idHabitacionParameter = idHabitacion.HasValue ?
                new ObjectParameter("idHabitacion", idHabitacion) :
                new ObjectParameter("idHabitacion", typeof(int));
    
            var diasReservadosParameter = diasReservados.HasValue ?
                new ObjectParameter("diasReservados", diasReservados) :
                new ObjectParameter("diasReservados", typeof(int));
    
            var fechaEntradaParameter = fechaEntrada.HasValue ?
                new ObjectParameter("fechaEntrada", fechaEntrada) :
                new ObjectParameter("fechaEntrada", typeof(System.DateTime));
    
            var fechaSalidaParameter = fechaSalida.HasValue ?
                new ObjectParameter("fechaSalida", fechaSalida) :
                new ObjectParameter("fechaSalida", typeof(System.DateTime));
    
            var costoPorAdultoParameter = costoPorAdulto.HasValue ?
                new ObjectParameter("costoPorAdulto", costoPorAdulto) :
                new ObjectParameter("costoPorAdulto", typeof(decimal));
    
            var costoPorNinhoParameter = costoPorNinho.HasValue ?
                new ObjectParameter("costoPorNinho", costoPorNinho) :
                new ObjectParameter("costoPorNinho", typeof(decimal));
    
            var numeroAdultosParameter = numeroAdultos.HasValue ?
                new ObjectParameter("numeroAdultos", numeroAdultos) :
                new ObjectParameter("numeroAdultos", typeof(int));
    
            var numeroNinhosParameter = numeroNinhos.HasValue ?
                new ObjectParameter("numeroNinhos", numeroNinhos) :
                new ObjectParameter("numeroNinhos", typeof(int));
    
            var costoTotalParameter = costoTotal.HasValue ?
                new ObjectParameter("costoTotal", costoTotal) :
                new ObjectParameter("costoTotal", typeof(decimal));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("fechaCreacion", fechaCreacion) :
                new ObjectParameter("fechaCreacion", typeof(System.DateTime));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("fechaModificacion", fechaModificacion) :
                new ObjectParameter("fechaModificacion", typeof(System.DateTime));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spcreacionreservacion", idPersonaParameter, idHabitacionParameter, diasReservadosParameter, fechaEntradaParameter, fechaSalidaParameter, costoPorAdultoParameter, costoPorNinhoParameter, numeroAdultosParameter, numeroNinhosParameter, costoTotalParameter, fechaCreacionParameter, fechaModificacionParameter, estadoParameter);
        }
    
        public virtual int spCrearBitacora(Nullable<int> idReservacion, Nullable<int> idPersona, string accion)
        {
            var idReservacionParameter = idReservacion.HasValue ?
                new ObjectParameter("idReservacion", idReservacion) :
                new ObjectParameter("idReservacion", typeof(int));
    
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("idPersona", idPersona) :
                new ObjectParameter("idPersona", typeof(int));
    
            var accionParameter = accion != null ?
                new ObjectParameter("accion", accion) :
                new ObjectParameter("accion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCrearBitacora", idReservacionParameter, idPersonaParameter, accionParameter);
        }
    
        public virtual int spCrearHabitacion(Nullable<int> idHotel, string numeroHabitacion, Nullable<int> capacidadMaxima, string descripcion)
        {
            var idHotelParameter = idHotel.HasValue ?
                new ObjectParameter("idHotel", idHotel) :
                new ObjectParameter("idHotel", typeof(int));
    
            var numeroHabitacionParameter = numeroHabitacion != null ?
                new ObjectParameter("numeroHabitacion", numeroHabitacion) :
                new ObjectParameter("numeroHabitacion", typeof(string));
    
            var capacidadMaximaParameter = capacidadMaxima.HasValue ?
                new ObjectParameter("capacidadMaxima", capacidadMaxima) :
                new ObjectParameter("capacidadMaxima", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCrearHabitacion", idHotelParameter, numeroHabitacionParameter, capacidadMaximaParameter, descripcionParameter);
        }
    
        public virtual int spEditarHabitacion(Nullable<int> idHabitacion, string numHabitacion, Nullable<int> cantidadMaxima, string descripcion)
        {
            var idHabitacionParameter = idHabitacion.HasValue ?
                new ObjectParameter("idHabitacion", idHabitacion) :
                new ObjectParameter("idHabitacion", typeof(int));
    
            var numHabitacionParameter = numHabitacion != null ?
                new ObjectParameter("NumHabitacion", numHabitacion) :
                new ObjectParameter("NumHabitacion", typeof(string));
    
            var cantidadMaximaParameter = cantidadMaxima.HasValue ?
                new ObjectParameter("cantidadMaxima", cantidadMaxima) :
                new ObjectParameter("cantidadMaxima", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEditarHabitacion", idHabitacionParameter, numHabitacionParameter, cantidadMaximaParameter, descripcionParameter);
        }
    
        public virtual int spEditarReservacion(Nullable<int> idReservacion, Nullable<int> numAdultos, Nullable<int> numNinhos, Nullable<System.DateTime> fechaEntrada, Nullable<System.DateTime> fechaSalida, Nullable<System.DateTime> fechaModificacion, Nullable<decimal> costoTotal, Nullable<int> idPersona)
        {
            var idReservacionParameter = idReservacion.HasValue ?
                new ObjectParameter("idReservacion", idReservacion) :
                new ObjectParameter("idReservacion", typeof(int));
    
            var numAdultosParameter = numAdultos.HasValue ?
                new ObjectParameter("numAdultos", numAdultos) :
                new ObjectParameter("numAdultos", typeof(int));
    
            var numNinhosParameter = numNinhos.HasValue ?
                new ObjectParameter("numNinhos", numNinhos) :
                new ObjectParameter("numNinhos", typeof(int));
    
            var fechaEntradaParameter = fechaEntrada.HasValue ?
                new ObjectParameter("fechaEntrada", fechaEntrada) :
                new ObjectParameter("fechaEntrada", typeof(System.DateTime));
    
            var fechaSalidaParameter = fechaSalida.HasValue ?
                new ObjectParameter("fechaSalida", fechaSalida) :
                new ObjectParameter("fechaSalida", typeof(System.DateTime));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("fechaModificacion", fechaModificacion) :
                new ObjectParameter("fechaModificacion", typeof(System.DateTime));
    
            var costoTotalParameter = costoTotal.HasValue ?
                new ObjectParameter("costoTotal", costoTotal) :
                new ObjectParameter("costoTotal", typeof(decimal));
    
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("idPersona", idPersona) :
                new ObjectParameter("idPersona", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEditarReservacion", idReservacionParameter, numAdultosParameter, numNinhosParameter, fechaEntradaParameter, fechaSalidaParameter, fechaModificacionParameter, costoTotalParameter, idPersonaParameter);
        }
    
        public virtual ObjectResult<spFiltrarReservaciones_Result> spFiltrarReservaciones(Nullable<int> idCliente, Nullable<System.DateTime> fechaEntrada, Nullable<System.DateTime> fechaSalida)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            var fechaEntradaParameter = fechaEntrada.HasValue ?
                new ObjectParameter("fechaEntrada", fechaEntrada) :
                new ObjectParameter("fechaEntrada", typeof(System.DateTime));
    
            var fechaSalidaParameter = fechaSalida.HasValue ?
                new ObjectParameter("fechaSalida", fechaSalida) :
                new ObjectParameter("fechaSalida", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFiltrarReservaciones_Result>("spFiltrarReservaciones", idClienteParameter, fechaEntradaParameter, fechaSalidaParameter);
        }
    
        public virtual ObjectResult<spFiltrosFechas_Result> spFiltrosFechas(Nullable<System.DateTime> fechaEntrada, Nullable<System.DateTime> fechaSalida)
        {
            var fechaEntradaParameter = fechaEntrada.HasValue ?
                new ObjectParameter("fechaEntrada", fechaEntrada) :
                new ObjectParameter("fechaEntrada", typeof(System.DateTime));
    
            var fechaSalidaParameter = fechaSalida.HasValue ?
                new ObjectParameter("fechaSalida", fechaSalida) :
                new ObjectParameter("fechaSalida", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFiltrosFechas_Result>("spFiltrosFechas", fechaEntradaParameter, fechaSalidaParameter);
        }
    
        public virtual ObjectResult<spGesReservacionFechas_Result> spGesReservacionFechas(Nullable<System.DateTime> fechaEntrada, Nullable<System.DateTime> fechaSalida)
        {
            var fechaEntradaParameter = fechaEntrada.HasValue ?
                new ObjectParameter("fechaEntrada", fechaEntrada) :
                new ObjectParameter("fechaEntrada", typeof(System.DateTime));
    
            var fechaSalidaParameter = fechaSalida.HasValue ?
                new ObjectParameter("fechaSalida", fechaSalida) :
                new ObjectParameter("fechaSalida", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGesReservacionFechas_Result>("spGesReservacionFechas", fechaEntradaParameter, fechaSalidaParameter);
        }
    
        public virtual ObjectResult<spGesReservacionFiltros_Result> spGesReservacionFiltros(Nullable<int> idpersona, Nullable<System.DateTime> fechaEntrada, Nullable<System.DateTime> fechaSalida)
        {
            var idpersonaParameter = idpersona.HasValue ?
                new ObjectParameter("idpersona", idpersona) :
                new ObjectParameter("idpersona", typeof(int));
    
            var fechaEntradaParameter = fechaEntrada.HasValue ?
                new ObjectParameter("fechaEntrada", fechaEntrada) :
                new ObjectParameter("fechaEntrada", typeof(System.DateTime));
    
            var fechaSalidaParameter = fechaSalida.HasValue ?
                new ObjectParameter("fechaSalida", fechaSalida) :
                new ObjectParameter("fechaSalida", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGesReservacionFiltros_Result>("spGesReservacionFiltros", idpersonaParameter, fechaEntradaParameter, fechaSalidaParameter);
        }
    
        public virtual ObjectResult<spGestionarReservaciones_Result> spGestionarReservaciones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGestionarReservaciones_Result>("spGestionarReservaciones");
        }
    
        public virtual int spHabitacionInactiva(Nullable<int> idHabitacion)
        {
            var idHabitacionParameter = idHabitacion.HasValue ?
                new ObjectParameter("idHabitacion", idHabitacion) :
                new ObjectParameter("idHabitacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spHabitacionInactiva", idHabitacionParameter);
        }
    
        public virtual ObjectResult<spListaHabitaciones_Result> spListaHabitaciones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListaHabitaciones_Result>("spListaHabitaciones");
        }
    
        public virtual ObjectResult<spLogin_Result> spLogin(string email, string clave)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spLogin_Result>("spLogin", emailParameter, claveParameter);
        }
    
        public virtual int spNuevaBitacora(Nullable<int> idReservacion, Nullable<int> idPersona, Nullable<System.DateTime> fechaCreacion, string accion)
        {
            var idReservacionParameter = idReservacion.HasValue ?
                new ObjectParameter("idReservacion", idReservacion) :
                new ObjectParameter("idReservacion", typeof(int));
    
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("idPersona", idPersona) :
                new ObjectParameter("idPersona", typeof(int));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("fechaCreacion", fechaCreacion) :
                new ObjectParameter("fechaCreacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("accion", accion) :
                new ObjectParameter("accion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spNuevaBitacora", idReservacionParameter, idPersonaParameter, fechaCreacionParameter, accionParameter);
        }
    
        public virtual int spNuevaReservacion(Nullable<int> idPersonaAutenticada, Nullable<int> idPersona, Nullable<int> idHotel, Nullable<System.DateTime> fechaEntrada, Nullable<System.DateTime> fechaSalida, Nullable<int> numeroAdultos, Nullable<int> numeroNinhos)
        {
            var idPersonaAutenticadaParameter = idPersonaAutenticada.HasValue ?
                new ObjectParameter("idPersonaAutenticada", idPersonaAutenticada) :
                new ObjectParameter("idPersonaAutenticada", typeof(int));
    
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("idPersona", idPersona) :
                new ObjectParameter("idPersona", typeof(int));
    
            var idHotelParameter = idHotel.HasValue ?
                new ObjectParameter("idHotel", idHotel) :
                new ObjectParameter("idHotel", typeof(int));
    
            var fechaEntradaParameter = fechaEntrada.HasValue ?
                new ObjectParameter("fechaEntrada", fechaEntrada) :
                new ObjectParameter("fechaEntrada", typeof(System.DateTime));
    
            var fechaSalidaParameter = fechaSalida.HasValue ?
                new ObjectParameter("fechaSalida", fechaSalida) :
                new ObjectParameter("fechaSalida", typeof(System.DateTime));
    
            var numeroAdultosParameter = numeroAdultos.HasValue ?
                new ObjectParameter("numeroAdultos", numeroAdultos) :
                new ObjectParameter("numeroAdultos", typeof(int));
    
            var numeroNinhosParameter = numeroNinhos.HasValue ?
                new ObjectParameter("numeroNinhos", numeroNinhos) :
                new ObjectParameter("numeroNinhos", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spNuevaReservacion", idPersonaAutenticadaParameter, idPersonaParameter, idHotelParameter, fechaEntradaParameter, fechaSalidaParameter, numeroAdultosParameter, numeroNinhosParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spValidacionHabitacion(Nullable<int> idHotel, string numHabitacion)
        {
            var idHotelParameter = idHotel.HasValue ?
                new ObjectParameter("idHotel", idHotel) :
                new ObjectParameter("idHotel", typeof(int));
    
            var numHabitacionParameter = numHabitacion != null ?
                new ObjectParameter("NumHabitacion", numHabitacion) :
                new ObjectParameter("NumHabitacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spValidacionHabitacion", idHotelParameter, numHabitacionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spValidacionHabitacionEicion(Nullable<int> idHabitacion, string numHabitacion)
        {
            var idHabitacionParameter = idHabitacion.HasValue ?
                new ObjectParameter("idHabitacion", idHabitacion) :
                new ObjectParameter("idHabitacion", typeof(int));
    
            var numHabitacionParameter = numHabitacion != null ?
                new ObjectParameter("NumHabitacion", numHabitacion) :
                new ObjectParameter("NumHabitacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spValidacionHabitacionEicion", idHabitacionParameter, numHabitacionParameter);
        }
    }
}
